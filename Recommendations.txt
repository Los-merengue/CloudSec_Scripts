- Avoid the use and sharing of root privilege accounts for standard cloud
operations.
 
- Create individual IAM accounts for users and services to access cloud
resources.
 
- Use groups to dissect the identities based on requirements and assign
access permissions accordingly.
 

- Ensure the MFA security check is in place to avoid online attacks such
as phishing, credential stuffing, and brute-force.

- Make sure to implement audit review guidelines to check the creden-
tials’ state after three months. Remove unused credentials, roles, and
service accounts.
 
- Enforce the credential rotation policy to rotate the password and keys at
regular intervals, at least every three months.

- Implement strong and complex credential policy to allow only strong
passwords and keys.

- Restrict access to only trusted entities by defining the role trust policy
attached to IAM roles.

- Avoid the use of dangerous permissions for the IAM roles and IAM us-
ers to restrict the over-permissive access.

- Follow the principle of least privileges and only allow a minimal set of
privileges to perform the required operations.

- Restrict the use of wild characters (*) to enable public and anonymous
access to interact with different IAM entities by insecure access permis-
sion policies.

- Review the policies to avoid confused deputy problems by implement-
ing explicit conditions to verify the clauses.

- Always use cryptographically secure random numbers for generating
tokens and identifiers.

- For cross-account access:
• Make sure to verify the trusted entity in the role trust policy.
• Use the External Id parameter to verify the third-party association
before granting access.

- Always use secure cryptographic ciphers and strong keys while creating
and deploying SSL/TLS certificates that different cloud services use.

- Configure blacklists and whitelists as required to restrict access to criti-
cal cloud components from unauthorized users.

You can also build policies and procedures using above recommenda-
tions to incorporate these as part of DevOps lifecycle.

## Some Metrics you may need to know that could be indicator of compromise involve

- CPU Usage Metrics:

Spikes in CPU usage not that is not explained might indicate active ransomware encryptioning or cryptomining.

- Network Logs and Metrics

Logging service within the cloud provide flow logs - which are accepted and denied traffic. Denied traffic 
when the source is your own could indicate a misconfiguration or an attack and this should be investigated

- Storage Input/Output Metrics

A spike in I/O not explained by increase usage might indicate active ransomware, a denial-of-service attack
or an attacker in the process of stealing data.

- Metrics on Request made to Platform components, such as Databases or Message Queue

If your database start going crazy, that may indicate that an attacker is stealing large amount of data. If
the message queue start going crazy, it may mean that an attacker is part of the system.

- Platform Service Logs and Metrics

For example, platform like kubernetes have a way of turning on audit logs which can be directed to one
collection point. Understanding how to use all this platform for auditing can be of great use to the security
posture of the infrastructure.

- Operating System Logs and Metrics

Using the CIS Benchmarks and vendor provided documents for common attacks is a good way to get started in 
mitigating these problems. For example, Miccrosoft has a document describing the Pass-the-Hash Attack and 
how this attacks can be mitigated with settings of the controls.